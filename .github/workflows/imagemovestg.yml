name: Move Old Azure Images to Storage

on:
  schedule:
    - cron: '0 0 * * 1' # Runs every Monday at midnight UTC
  workflow_dispatch: # Allows manual trigger

jobs:
  move-images:
    runs-on: self-hosted

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Authenticate to Azure
      uses: azure/login@v2
      with:
        auth-type: IDENTITY
        client-id: ${{ secrets.AZURE_CLIENT_ID1 }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID1 }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID1 }}

    - name: List Old Image Versions
      id: list-images
      shell: pwsh
      run: |
        # Define variables
        $RESOURCE_GROUP="rg-packer-acg"
        $GALLERY_NAME="AzurepackerImages"
        $IMAGE_NAME="win2019dcx64"
        
        # Get all image versions except those tagged with "keep"
         $OLD_IMAGES = az sig image-version list `
         --resource-group $RESOURCE_GROUP `
         --gallery-name $GALLERY_NAME `
         --gallery-image-definition $IMAGE_NAME `
         --query "[?tags.retention!='keep'].name" `
         --output json | ConvertFrom-Json

        if ($OLD_IMAGES -eq $null -or $OLD_IMAGES.Count -eq 0) {
         Write-Output "No old images found to move."
         exit 0
        }
        # Convert the list to a space-separated string
        $IMAGE_LIST = $OLD_IMAGES -join ' '
       
         # Export to GitHub Actions environment variable
        "IMAGE_LIST=$IMAGE_LIST" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

        - name: Move Old Image Versions to Storage
        shell: pwsh
        run: |
          # Define variables
          $RESOURCE_GROUP = "rg-packer-acg"
          $GALLERY_NAME="AzurepackerImages"
          $IMAGE_NAME="win2019dcx64"
          $STORAGE_ACCOUNT = "tfstatewells"
          $CONTAINER_NAME = "image-backups"
      
          # Get old image versions
          $OLD_IMAGES = az sig image-version list `
            --resource-group $RESOURCE_GROUP `
            --gallery-name $GALLERY_NAME `
            --gallery-image-definition $IMAGE_NAME `
            --query "[?tags.retention!='keep'].name" `
            --output json | ConvertFrom-Json
      
          if ($OLD_IMAGES -eq $null -or $OLD_IMAGES.Count -eq 0) {
            Write-Output "No old images found to move."
            exit 0
          }
      
          # Loop through each image version and move it to storage
          foreach ($IMAGE_VERSION in $OLD_IMAGES) {
            Write-Output "Processing image version: $IMAGE_VERSION"
            
            # Export the image to a storage account
            az sig image-version export `
              --resource-group $RESOURCE_GROUP `
              --gallery-name $GALLERY_NAME `
              --gallery-image-definition $IMAGE_NAME `
              --gallery-image-version $IMAGE_VERSION `
              --target-name "$IMAGE_VERSION.vhd" `
              --storage-account $STORAGE_ACCOUNT `
              --storage-container $CONTAINER_NAME
            
            if ($?) {
              Write-Output "Successfully moved image version $IMAGE_VERSION"
            } else {
              Write-Output "Failed to move image version $IMAGE_VERSION"
            }
          }
