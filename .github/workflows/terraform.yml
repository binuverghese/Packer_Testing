name: Terraform deploy

on:
  
  workflow_dispatch: 
    #  branches:
    #   #- main
    #    - test
jobs:
 terraform:
    name: Deploy VM using SIG
    runs-on: [Linux]
    env:
      ROOT_PATH : '${{github.workspace}}/terraform-poc' 
      TF_LOG: INFO
      # STORAGE_ACCOUNT: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}
      # CONTAINER_NAME: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}
      # RESOURCE_GROUP: ${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}
      # AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      # AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_TENANT_ID }}
      # AZURE_TENANT_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    permissions:
      id-token: write
      contents: read
    # needs: packer
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set up Azure CLI
        uses: azure/login@v2
        with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Run Az commands'
        run: |
         az account show

      - name: Terraform Init
        #run: terraform init  
        working-directory: ${{env.ROOT_PATH}}
        env:
          STORAGE_ACCOUNT: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}
          CONTAINER_NAME: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}
          RESOURCE_GROUP: ${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
        run: terraform init -backend-config="resource_group_name=${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}"  
       

        #Run Terraform Plan
      - name: Terraform plan
        
        working-directory: ${{env.ROOT_PATH}}
        run: 
         terraform plan -no-color
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        
  
       #Run Terraform apply
      - name: Terraform Apply
        
        working-directory: ${{env.ROOT_PATH}}
        run: 
         terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
             