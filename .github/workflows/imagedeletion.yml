name: Clean Up Old Images in Azure Image Gallery

on:
  schedule:
    - cron: "45 9 * * 1"  # Runs every friday at 03:00 UTC
  #workflow_dispatch:  # Allows manual execution

jobs:
  cleanup:
    name: Delete Old Image Versions
    runs-on: self-hosted

    env:
      IMAGE_GALLERY: "AzurepackerImages"
      RESOURCE_GROUP: "rg-packer-acg"
      IMAGE_DEFINITION: "win2019x64-repave"
      KEEP_VERSIONS: 0  # Number of latest versions to keep

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate to Azure
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          client-id: ${{ secrets.AZURE_CLIENT_ID1 }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID1 }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID1 }}

      - name: Fetch and Delete Old Image Versions
        shell: pwsh
        run: |
            Write-Output "Fetching image versions..."
            $imageVersions = az sig image-version list `
              --resource-group $env:RESOURCE_GROUP `
              --gallery-name $env:IMAGE_GALLERY `
              --gallery-image-definition $env:IMAGE_DEFINITION `
              --query "[].{version:name}" `
              --output tsv | Sort-Object
  
            Write-Output "Image Versions Found:"
            Write-Output "$imageVersions"
  
            $count = ($imageVersions -split "`n").Count
            Write-Output "Total versions: $count"
  
            if ($count -gt $env:KEEP_VERSIONS) {
              $deleteCount = $count - [int]$env:KEEP_VERSIONS
              $deleteVersions = ($imageVersions -split "`n") | Select-Object -First $deleteCount
  
              foreach ($version in $deleteVersions) {
                Write-Output "Deleting version: $version"
                az sig image-version delete `
                  --resource-group $env:RESOURCE_GROUP `
                  --gallery-name $env:IMAGE_GALLERY `
                  --gallery-image-definition $env:IMAGE_DEFINITION `
                  --gallery-image-version $version
              }
            } else {
              Write-Output "No old versions to delete."
            }
  
